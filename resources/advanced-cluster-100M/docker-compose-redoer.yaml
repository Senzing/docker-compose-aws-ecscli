version: '3'
services:
  redoer:
    cap_add:
      - SYS_PTRACE
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_METADATA_SERVICE_NUM_ATTEMPTS: ${AWS_METADATA_SERVICE_NUM_ATTEMPTS}
      AWS_METADATA_SERVICE_TIMEOUT: ${AWS_METADATA_SERVICE_TIMEOUT}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      SENZING_ENGINE_CONFIGURATION_JSON: >-
        {
          "PIPELINE": {
            "CONFIGPATH": "/etc/opt/senzing",
            "RESOURCEPATH": "/opt/senzing/g2/resources",
            "SUPPORTPATH": "/opt/senzing/data"
          },
          "SQL": {
            "BACKEND": "HYBRID",
            "CONNECTION": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST}:5432:${POSTGRES_DB:-G2}"
          },
          "C1": {
            "CLUSTER_SIZE": "1",
            "DB_1": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST_RES}:5432:${POSTGRES_DB:-G2_RES}"
          },
          "C2": {
            "CLUSTER_SIZE": "1",
            "DB_1": "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST_LIBFEAT}:5432:${POSTGRES_DB:-G2_LIBFEAT}"
          },
          "HYBRID": {
            "RES_FEAT": "C1",
            "RES_FEAT_EKEY": "C1",
            "RES_FEAT_LKEY": "C1",
            "RES_FEAT_STAT": "C1",
            "LIB_FEAT": "C2",
            "LIB_FEAT_HKEY": "C2"
          }
        }
      SENZING_EXIT_ON_THREAD_TERMINATION: "true"
      SENZING_GOVERNOR_CHECK_TIME_INTERVAL_IN_SECONDS: 600
      SENZING_GOVERNOR_DATABASE_URLS: "postgresql://${POSTGRES_USERNAME:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST}:5432/${POSTGRES_DB:-G2}"
      SENZING_LOG_LEVEL: ${SENZING_LOG_LEVEL:-info}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS:-600}
      SENZING_REDO_SLEEP_TIME_IN_SECONDS: 600
      SENZING_SUBCOMMAND: redo
      SENZING_THREADS_PER_PROCESS: 8
    image: senzing/redoer:${SENZING_DOCKER_IMAGE_VERSION_REDOER:-1.3.4}
    logging:
      driver: awslogs
      options:
        awslogs-group: ${SENZING_AWS_LOGS_GROUP:-senzing-docker-compose-aws-ecscli-demo}
        awslogs-region: ${AWS_DEFAULT_REGION}
        awslogs-stream-prefix: advanced-cluster
    user: ${SENZING_DOCKER_RUNAS_REDOER}
    volumes:
      - senzing-data-version-dir:/opt/senzing/data
      - senzing-etc-dir:/etc/opt/senzing
      - senzing-g2-dir:/opt/senzing/g2
volumes:
  senzing-data-version-dir:
  senzing-etc-dir:
  senzing-g2-dir:
